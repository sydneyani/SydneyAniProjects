<!DOCTYPE html>
<html>
<head>
    <title>Welcome to MahSyd Housing</title> 
    <style>
        body {
            background-color: black; 
            color: white; 
            text-align: center;
            background-image: url('housing.jpg'); 
            background-size: 50% auto; 
            background-position: center top; /* Centered background vertically */
            background-repeat: no-repeat;
        }
        
        .navbar {
            background-color: tan;
        
        }

        .navbar a {
            text-decoration: none;
            color: black;
            margin:  0;
        }
        
        .title {
            color: black; 
            padding: 20px;
        }
        
        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            display: inline;
            margin-right: 20px;
        }

        a {
            text-decoration: none;
            color: black;
            background-color: lightgray;
            padding: 5px 10px;
            border-radius: 5px;
        }
        .table-container {
            background-image: url('https://s3-eu-west-1.amazonaws.com/blog-ecotree/blog/0001/01/ad46dbb447cd0e9a6aeecd64cc2bd332b0cbcb79.jpeg'); /* Replace with your actual image path */
            background-size: cover;
            background-position: center;
            margin-bottom: 10px;
            padding: 370px;
        }
        table {
            background-color: tan;
            /* Make sure the table background isn't transparent so that the text is readable */
        }
        .game-canvas {
            width: 400px; /* Set the width of the game area */
            height: 400px; /* Set the height of the game area */
            margin: 0 auto; /* Center the game area */
            background-color: #c1a0a0; /* Set the background color of the game area */
        }
        #gameCanvas {
            width: 400px;
            height: 400px;
            margin: 0 auto;
            background-color: #000;
        }
        #gameControls {
            margin-top: 20px;
        }
    </style>
</head>
    <div class="navbar">
        <h1 class="title">
          Take action now! Deals occurring rapidly and rates will be increasing soon! 
          Dial us at <%= phoneNumber ? phoneNumber : 'your default phone number' %> for more information on living!
        </h1> <!-- Dynamic phone number -->
      </div>
    <h1>Welcome to MahSyd Housing</h1>
    <p>Select an action:</p>
    <ul>
        <li><a href="/manage_floors">Manage Floors</a></li>
        <li><a href="/manage_rooms">Manage Rooms</a></li>
        <li><a href="/manage_occupants">Manage Occupants</a></li>
    </ul>
    
    <div class="table-container">
        <h2>Play a game while you're here!</h2>
        <canvas id="gameCanvas" width="400" height="400"></canvas>
        <div id="score">Score: 0</div>
        <div id="gameControls">
            <button id="playButton">Play</button>
            <button id="resetButton">Reset</button>
        </div>

    </div>
    
    <script>
        // JavaScript for the snake game
        var canvas = document.getElementById('gameCanvas');
        var ctx = canvas.getContext('2d');
        var playButton = document.getElementById('playButton');
        var resetButton = document.getElementById('resetButton');
        var scoreText = document.getElementById('score');
        var gameRunning = false;

// Set up the game variables
var snake = [
    {x: 200, y: 200},
    {x: 190, y: 200},
    {x: 180, y: 200},
    {x: 170, y: 200},
    {x: 160, y: 200}
];
var score = 0;
var changingDirection = false;
var foodX;
var foodY;
var dx = 10;
var dy = 0;

// Start game
main();
createFood();
document.addEventListener("keydown", changeDirection);

function main() {
    // If the game ended return early to stop game
    if (didGameEnd()) return;

    changingDirection = false;
    setTimeout(function onTick() {
        clearCanvas();
        drawFood();
        advanceSnake();
        drawSnake();
        // Call game again
        main();
    }, 100);
}

function clearCanvas() {
    ctx.fillStyle = "black";
    ctx.strokestyle = "white";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    ctx.strokeRect(0, 0, canvas.width, canvas.height);
}

function drawFood() {
    ctx.fillStyle = 'red';
    ctx.strokestyle = 'darkred';
    ctx.fillRect(foodX, foodY, 10, 10);
    ctx.strokeRect(foodX, foodY, 10, 10);
}

function advanceSnake() {
    // Create the new Snake's head
    const head = {x: snake[0].x + dx, y: snake[0].y + dy};
    // Add the new head to the beginning of snake body
    snake.unshift(head);

    const didEatFood = snake[0].x === foodX && snake[0].y === foodY;
    if (didEatFood) {
        // Increase score
        score += 10;
        // Display score on screen
        document.getElementById('score').innerText = score;
        // Generate new food location
        createFood();
    } else {
        // Remove the last part of snake body
        snake.pop();
    }
}

function didGameEnd() {
    for (let i = 4; i < snake.length; i++) {
        const didCollide = snake[i].x === snake[0].x && snake[i].y === snake[0].y
        if (didCollide) return true
    }

    const hitLeftWall = snake[0].x < 0;
    const hitRightWall = snake[0].x > canvas.width - 10;
    const hitToptWall = snake[0].y < 0;
    const hitBottomWall = snake[0].y > canvas.height - 10;

    return hitLeftWall || hitRightWall || hitToptWall || hitBottomWall
}

function randomTen(min, max) {
    return Math.round((Math.random() * (max-min) + min) / 10) * 10;
}

function createFood() {
    // Generate a random number the food x-coordinate
    foodX = randomTen(0, canvas.width - 10);
    // Generate a random number for the food y-coordinate
    foodY = randomTen(0, canvas.height - 10);
    // if the new food location is where the snake currently is, generate a new food location
    snake.forEach(function isFoodOnSnake(part) {
        const foodIsOnSnake = part.x == foodX && part.y == foodY;
        if (foodIsOnSnake)
            createFood();
    });
}

function drawSnake() {
    snake.forEach(drawSnakePart)
}

function drawSnakePart(snakePart) {
    ctx.fillStyle = 'lightgreen';
    ctx.strokestyle = 'darkgreen';
    ctx.fillRect(snakePart.x, snakePart.y, 10, 10);
    ctx.strokeRect(snakePart.x, snakePart.y, 10, 10);
}

function changeDirection(event) {
    const LEFT_KEY = 37;
    const RIGHT_KEY = 39;
    const UP_KEY = 38;
    const DOWN_KEY = 40;

    if (changingDirection) return;
    changingDirection = true;

    const keyPressed = event.keyCode;
    const goingUp = dy === -10;
    const goingDown = dy === 10;
    const goingRight = dx === 10;
    const goingLeft = dx === -10;

    if (keyPressed === LEFT_KEY && !goingRight) {
        dx = -10;
        dy = 0;
    }

    if (keyPressed === UP_KEY && !goingDown) {
        dx = 0;
        dy = -10;
    }

    if (keyPressed === RIGHT_KEY && !goingLeft) {
        dx = 10;
        dy = 0;
    }

    if (keyPressed === DOWN_KEY && !goingUp) {
        dx = 0;
        dy = 10;
    }
}
function resetGame() {
            // Reset game state
            snake = [
                {x: 200, y: 200},
                {x: 190, y: 200},
                {x: 180, y: 200},
                {x: 170, y: 200},
                {x: 160, y: 200}
            ];
            score = 0;
            scoreText.innerText = 'Score: ' + score;
            dx = 10;
            dy = 0;
            clearCanvas();
            drawSnake();
            createFood();
        }
        
        playButton.addEventListener('click', function() {
            if (!gameRunning) {
                gameRunning = true;
                resetGame();
                main();
            }
        });
        
        resetButton.addEventListener('click', function() {
            gameRunning = false;
            resetGame();
        });

        // Prevent arrow keys from scrolling the page
        window.addEventListener('keydown', function(e) {
            if(['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].indexOf(e.code) > -1) {
                e.preventDefault();
            }
        }, false);
    </script>
</body>
</html>
